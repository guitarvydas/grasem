
grasemProgram [@ws ohmGrammar @glueSemantics ] = [[#!/bin/bash\nsplit -p '%%%%%'  - "_" <<'%%EOF'\n${ws}${escapeEscapes (ohmGrammar)}\n%%%%%\n${glueSemantics}\n%%EOF]]

ohmGrammar [grammarName grammarBody] = [[${grammarName}${grammarBody}]]

grammarBody [lb @ws @grammarToken rb @ws2] = [[${lb}${ws}${grammarToken}${rb}${ws2}]]
grammarName [ name ] = [[${name}]] 


glueSemantics [semanticsName semanticsParameters eq @ws @code lbb @rewriteChar rbb @ws2] =
  [[${semanticsName}${semanticsParameters}${eq}${ws}${code}${lbb}${rewriteChar}${rbb}${ws2}]]

code [lbb @ws @codeChar rbb @ws2] = [[${lbb}${ws}${codeChar}${rbb}${ws2}]]

codeChar [token] = [[${token}]]
rewriteChar [token] = [[${token}]]


semanticsName [name @ws] = [[${name}${ws}]]
semanticsParameters [ lb @ws @semanticsParam rb @ws2] = [[${lb}${ws}${semanticsParam}${rb}${ws2}]]
semanticsParam [p] = [[${p}]]
semanticsTreeParam [at @ws semanticsFlatParam] = [[${at}${ws}${semanticsFlatParam}]]
semanticsFlatParam [name @ws] = [[${name}${ws}]]

name [char1 @charRest @ws] = [[${char1}${charRest}${ws}]]
char1 [c] = [[${c}]]
charRest [c] = [[${c}]]

grammarToken [token] = [[${token}]]
token [x] = [[${x}]]
tokenChar [c] = [[${c}]]
tokenCharNested [lb @ws @tokenChar rb @ws2] = [[${lb}${ws}${tokenChar}${rb}${ws2}]]
tokenCharSimple [c] = [[${c}]]

comment [pct @cs nl] = [[${pct}${cs}${nl}]]

newline [c] = [[${c}]]
notNewline [c] = [[${c}]]

string [lq @cs rq] = [[${lq}${cs}${rq}]]
stringChar [c] = [[${c}]]
stringCharEscaped [_bslash c] = [[${_bslash}${c}]]
stringCharNotEscaped [c] = [[${c}]]

ws [c] = [[${c}]]

endGrammar [c nl] = [[${c}${nl}]]
